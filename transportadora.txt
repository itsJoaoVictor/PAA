Eu estou fazendo um exercício e preciso de ajude. 
O enunciado da Questão:


A empresa de transportes Poxim Tech está tornando as entregas de encomendas de última milha mais eficientes e rápidas, através da maximização do valor total do frete e das características de cada tipo de veículo. 
- Para codificação das placas de trânsito dos veículos e dos códigos de rastreamento dos pacotes são utilizados os símbolos L e N, que representam letras maiúsculas e números, respectivamente.
-As unidades utilizadas para peso é quilo (kg), valor é reais (R$) e volume é litro (l)
- Cada veículo é identificado pela sua placa de trânsito, nos formatos LLLNNNN ou LLLNLNN, além da sua capacidade máxima de carga (peso e volume)
- Os pacotes possuem um código de rastreamento descrito no padrão LLNNNNNNNNNLL, juntamente com informações sobre o valor, peso e volume
- Formato do arquivo de entrada
-[#n]
- [Placa0] [Peso0] [Volume0]
-
.
.
.
-[Placan–1] [Peson–1] [Volumen–1]
- [#m]
- [Codigo0] [Valor0] [Peso0] [Volume0]
-
.
.
.
- [Codigo  m–1] [Valorm–1] [Pesom–1] [Volumem–1]

Exemplo pratico: 


2
AAA1234 50 100
BBB5C67 2000 12000
5
AB111222333CD 49.99 2 1
EF444555666GH 5000.01 1234 7000
IJ777888999KL 100 49 10
MN000111222OP 65.01 3 125
QR333444555ST 200.01 13 4875


Formato do arquivo de saída
-Para cada veículo é gerada uma sequência de carregamento
dos pacotes que maximizam o valor transportado, sem
exceder a capacidade de carga
exemplo pratico de saída
[AAA1234]R$100.00,49KG(98%),10L(10%)->IJ777888999KL
[BBB5C67]R$5265.03,1250KG(63%),12000L(100%)->EF444555666GH,MN000111222OP,QR333444555ST
PENDENTE:R$49.99,2KG,1L->AB111222333CD


Requisitos que devem está presente no Código:
- Deve ser Feito em C
- Deve utilizar o Conceito de Programaçaõ dinamica
- tempo limite de execução não pode ser superior a 1 segundo por isso deve está otimizado para não ocorre timeout nem memory limit exceeded
- deve se utilizar a Logica: SE(E(Peso<=Peso Restante;Volume<=Volume Restante); J7/(RAIZ((Peso/Peso Restante)*(Volume/Volume Restante)));"Excede Limite") para calcular a eficiencia de cada pacote em relação ao veiculo e assim maximizar o valor total, apos alocar o pacote no veiculo deve se atualizar o peso e volume restante do veiculo e verificar se ainda cabe mais pacotes, caso não caiba mais pacotes deve se passar para o proximo veiculo e assim por diante, os proximos veiculo não podem carregar pacotes que ja foram alocados para veiculos anteriores  
- O codigo não pode conter erros de compilação, execução ou logica
- o codigo nção pode ter timeout: the monitored command dumped core Command terminated by signal 11, e nem memory limit exceeded: the monitored command dumped core Command terminated by signal 6
- é monitorado: CPU Usage:|Max Memory:| Execution time: 
// E/S padrao
#include <stdio.h>
// Funcao principal
int main(int argc, char* argv[]) {
    // Ilustrando uso de argumentos de programa
    printf("#ARGS = %i\n", argc);
    printf("PROGRAMA = %s\n", argv[0]);
    printf("ARG1 = %s, ARG2 = %s\n", argv[1], argv[2]);
    // Abrindo arquivos
    FILE* input = fopen(argv[1], "r");
    FILE* output = fopen(argv[2], "w");
    //
    // ...
    //
    // Fechando arquivos
    fclose(input);
    fclose(output);
    // Finalizando programa
    return 0;
}



